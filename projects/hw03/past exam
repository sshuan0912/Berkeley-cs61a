
def collapse(n):
    """For non-negative N, the result of removing all digits that are equal
    to the digit on their right, so that no adjacent digits are the same.
    >>> collapse(1234)
    1234
    >>> collapse(12234441)
    12341
    >>> collapse(0)
    0
    >>> collapse(3)
    3
    >>> collapse(11200000013333)
    12013
    """
    if n < 10:
        return n
    else:
        digit = n%10
        ten_digit = (n//10)%10
        if ten_digit != digit:
            return collapse(n//10)*10 + n%10
        else:
            return collapse(n//10)


'''
left, last = n // 10, n % 10
if ___________________________________________________________________________________:
return last
elif _________________ == ____________________________________________________________:
return collapse(__________________________________________________________________)
else:
return collapse(___________________________) * 10 + ______________________________
'''


def repeat_digits(n):
    """Given a positive integer N, returns a number with each digit repeated.
    >>> repeat_digits(1234)
    11223344
    """
    last = n%10
    rest = n//10
    if rest < 1:
        return n*10+n
    else:
        return repeat_digits(rest)*100 + last*10+last

#print(repeat_digits(1234))
 
'''
last, rest = _____________________________________, _____________________________________
if ______________________________________________________________________________________:
return ______________________________________________________________________________
return ___________________(_______________) * ______________ + __________________________
''' 

def contains(a, b):
    """Return whether the digits of a are contained in the digits of b.
    >>> contains(357, 12345678)
    True
    >>> contains(753, 12345678)
    False
    >>> contains(357, 37)
    False
    """
    if a == b:
        return True
    if a > b:
        return False
    if a%10 == b%10:
        return contains(a//10, b//10)
    else:
        return contains(a, b//10)
        

print(contains(357, 12345678))

'''  
if a == b:
return True
if ________________________________________ > _________________________________________:
return False
if ________________________________________ == ________________________________________:
return contains( _______________________________ , _______________________________ )
else:
return contains( _______________________________ , ____________________________
'''   